name: Resusable Frontend Setup Checks

on:
  workflow_call:
    inputs: 
      os:
        description: 'The OS to run the tests on'
        required: true
        type: string
        default: 'ubuntu-latest'
      frontendEnv:
        description: 'The frontend environment to run the tests on'
        required: true
        type: string
        default: 'staging'
      DotNetVersion:
        description: 'The .NET SDK version to use'
        required: true
        type: string
        default: '7.0.400'
      NodeVersion:
        description: 'The node version to use'
        required: true
        type: string
        default: '18.x'
      

env:
  DOTNET_VERSION: ${{inputs.DotNetVersion}} # The .NET SDK version to use
  NODE_VERSION: ${{inputs.NodeVersion}}  # The node version to use
      

jobs:
  frontend-setup-checks:
    name: Frontend-Setup-Checks-${{inputs.os}}-${{inputs.frontendEnv}}
    runs-on: ${{ inputs.os }}
    permissions:
      checks: write
      contents: read
    defaults:
      run:
        shell: bash  
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 5
          lfs: false

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Install wasm-tools
        run: dotnet workload install wasm-tools
      
      - name: Restore for .NET dependencies required for client setup tests
        working-directory: ./
        run: |
          dotnet restore

      - name: SetupNode
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ./Energy.App.Standalone/package-lock.json
      
      - name: Install npm dependencies
        working-directory: ./Energy.App.Standalone
        run: npm ci
      
      - name: Test front-end dependencies
        continue-on-error: true
        id: frontend-tests
        working-directory: ./Energy.App.Standalone
        run: |
          npm test --environments=${{inputs.frontendEnv}}
      
      - name: Frontent Test Report 
        uses: dorny/test-reporter@afe6793191b75b608954023a46831a3fe10048d4
        if: success() || failure()
        with:
          name: Frontend Test Report ${{inputs.frontendEnv}}
          path: Energy.App.Standalone/testResults/clientDeploymentTestResults.xml
          reporter: java-junit
      
      - name: Report Results and Checks
        run: |
          echo "## Frontend Setup Check Results for ${{ inputs.os }} - ${{inputs.frontendEnv}}" >> $GITHUB_STEP_SUMMARY
          echo "- dotnet v${{env.DOTNET_VERSION}}" >> $GITHUB_STEP_SUMMARY
          echo "- node v${{env.NODE_VERSION}}" >> $GITHUB_STEP_SUMMARY
          echo "### frontend-tests result: ${{ steps.frontend-tests.outcome }}" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ steps.frontend-tests.outcome }}" == "success" ]]; then
            echo " - All tests passed" >> $GITHUB_STEP_SUMMARY
          else
            echo " - Failed tests" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

