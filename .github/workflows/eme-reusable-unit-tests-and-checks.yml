name: Resusable Unit Tests and Checks

on:
  workflow_call:
    inputs: 
      os:
        description: 'The OS to run the tests on'
        required: true
        type: string
        default: 'ubuntu-latest'
      frontendEnv:
        description: 'The frontend environment to run the tests on'
        required: true
        type: string
        default: 'staging'
      DotNetVersion:
        description: 'The .NET SDK version to use'
        required: true
        type: string
        default: '7.0.400'
      NodeVersion:
        description: 'The node version to use'
        required: true
        type: string
        default: '18.x'
      

env:
  DOTNET_VERSION: ${{inputs.DotNetVersion}} # The .NET SDK version to use
  NODE_VERSION: ${{inputs.NodeVersion}}  # The node version to use
      

jobs:
  unit-tests:
    name: Unit-Test-${{inputs.os}}-${{inputs.frontendEnv}}
    runs-on: ${{ inputs.os }}
    permissions:
      checks: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore and Build
        working-directory: ./
        run: |
          dotnet restore
          dotnet build --no-restore --configuration Release

      - name: Test .NET dependencies
        continue-on-error: true
        id: dotnet-tests
        run: |
          dotnet test Energy.Test --no-build --configuration Release --logger:"trx;LogFileName=TestResults.trx"
          echo "::set-output name=dotnet-tests-result::$?" 
        shell: bash

      - name: Test Report
        uses: dorny/test-reporter@c9b3d0e2bd2a4e96aaf424dbaa31c46b42318226
        if: success() || failure()
        with:
          name: Test Results ${{inputs.os}}
          path: Energy.Test/TestResults/TestResults.trx
          reporter: dotnet-trx
      
      - name: SetupNode
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ./Energy.App.Standalone/package-lock.json
      
      - name: Install npm dependencies
        working-directory: ./Energy.App.Standalone
        run: npm ci
      
      - name: Test front-end dependencies
        continue-on-error: true
        id: frontend-tests
        working-directory: ./Energy.App.Standalone
        run: |
          npm test --environments=${{inputs.frontendEnv}}
          echo "::set-output name=frontend-tests-result::$?"
        shell: bash
      
      - name: Frontent Test Report 
        uses: dorny/test-reporter@c9b3d0e2bd2a4e96aaf424dbaa31c46b42318226
        if: success() || failure()
        with:
          name: Frontend Test Report ${{inputs.frontendEnv}}
          path: Energy.App.Standalone/testResults/clientDeploymentTestResults.xml
          reporter: java-junit
      
      - name: Check Results
        run: |
          if [ ${{ steps.dotnet-tests.outputs.dotnet-tests-result != '0' }}  -o ${{ steps.frontend-tests.outputs.frontend-tests-result != '0' }} ]; then
            exit 1
          fi


