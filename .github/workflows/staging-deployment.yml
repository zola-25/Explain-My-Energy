name: Staging Build

on:
  workflow_dispatch:
    
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'info'
        type: choice
        options:
        - info
        - warning
        - debug
      commit:
        description: 'Commit SHA'
        required: true
        type: string


env:
  environment-name: staging
  DOTNET_VERSION: '7.0.400'
  NODE_BUILD_VERSION: '18'

jobs:
    call-unit-tests:
        name: Staging Deployment - Unit Tests and Checks
        uses: ./.github/workflows/eme-reusable-unit-tests-and-checks.yml
        with:
            os: ubuntu-latest
            frontendEnv: staging
            DotNetVersion: '7.0.400'
            NodeVersion: '18.x'
    setup-environment:
        name: Staging Deployment - Build
        runs-on: ubuntu-latest
        needs: call-unit-tests
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                ref: ${{ inputs.commit }}
              
            - name: SetupNode
              uses: actions/setup-node@v3
              with:
                node-version: ${{ env.NODE_BUILD_VERSION }}
                cache: 'npm'
                cache-dependency-path: ./Energy.App.Standalone/package-lock.json
            - name: Setup .NET Core
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: ${{ env.DOTNET_VERSION }}
    build:
        name: Staging Deployment - Build
        runs-on: ubuntu-latest
        needs: setup-environment
        defaults:
            run:
                shell: bash
                working-directory: ./Energy.App.Standalone
        steps:
            - name: Install npm dependencies
              run: npm ci
        
            - name: Build client-side dependencies
              run: npm run build -- --${{ env.environment-name }}

            - name: Publish
              run: dotnet publish -c Release -o ./bin/publish

            - name: Deploy
              run: swa deploy -O ./bin/publish/wwwroot 
          
