

<EditForm Model="_tariffDetail" OnValidSubmit="OnValidTariffSubmit">

    <MudPaper Elevation="0" Class="p-2">

        <ObjectGraphDataAnnotationsValidator />
        <ValidationSummary />

        <MudRadioGroup T="bool" For="@(() => _tariffDetail.IsHourOfDayFixed)" @bind-SelectedOption="_tariffDetail.IsHourOfDayFixed" Required>
            <MudRadio T="bool" Option="true">Fixed</MudRadio>
            <MudRadio T="bool" Option="false">Hourly</MudRadio>
        </MudRadioGroup>

        <MudDatePicker Label="Applies From" For="@(() => _tariffDetail.DateAppliesFrom)" @bind-Date="_tariffDetail.DateAppliesFrom" DateFormat="D" Clearable="true" TitleDateFormat="d MMMM yyyy" Required></MudDatePicker>

        @if (_tariffDetail.IsHourOfDayFixed)
        {
            <MudNumericField Label="Unit Rate (p)" For="@(() => _tariffDetail.PencePerKWh)" T="decimal" @bind-Value="_tariffDetail.PencePerKWh" Step="0.1m" Min="0" Max="1000000" Format="#.###" Adornment="Adornment.End" AdornmentText="p per kWh" Required></MudNumericField>
        }
        <MudNumericField Label="Daily Standing Charge (p)" T="decimal" For="@(() => _tariffDetail.DailyStandingChargePence)" @bind-Value="_tariffDetail.DailyStandingChargePence" Min="0" Max="1000000" Format="#.###" Step="0.1m" Adornment="Adornment.End" AdornmentText="p" Required></MudNumericField>
    </MudPaper>
    <MudPaper Elevation="0" Class="p-0">
        @if (!_tariffDetail.IsHourOfDayFixed)
        {
            <MudText Style="margin-left: 10px;" Typo="Typo.caption">Hourly Rates*</MudText>

            <MudSimpleTable Dense="true" FixedHeader="true" Style="height: 400px;" Square="true" Outlined="true" Striped="true" Elevation="0" Class="">
                <thead>
                    <MudTr>
                        <MudTh>Hour</MudTh>
                        <MudTh>Pence per kWh</MudTh>
                    </MudTr>
                </thead>
                <tbody>
                    @foreach (var hourOfDayPrice in _tariffDetail.HourOfDayPrices)
                    {
                        <MudTr>
                            <MudTd DataLabel="Hour">@hourOfDayPrice.HourOfDay.eTimeSpanToString()</MudTd>
                            <MudTd DataLabel="Pence per kWh">
                                <MudNumericField T="decimal" @bind-Value="hourOfDayPrice.PencePerKWh" Variant="Variant.Outlined" Class="" DisableUnderLine="true" Step="0.1m" Min="0" Max="1000000" Format="#.###" Adornment="Adornment.End" AdornmentText="p per kWh" Required></MudNumericField>
                            </MudTd>
                        </MudTr>
                    }
                </tbody>
            </MudSimpleTable>
        }
    </MudPaper>

    <MudPaper Elevation="0" Class="d-flex justify-end">
        <MudSpacer></MudSpacer>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="m-2">@_buttonText</MudButton>
    </MudPaper>
</EditForm>

@code {
    [Parameter, EditorRequired] public MeterType MeterType { get; set; }

    [Parameter, EditorRequired] public TariffDetail TariffDetail { get; set; }

    [Parameter, EditorRequired] public bool Adding { get; set; }

    [Parameter]
    public EventCallback<TariffDetail> OnSubmitCallback { get; set; }


    string _buttonText;
    TariffDetail _tariffDetail;
    protected override void OnParametersSet()
    {
        _tariffDetail = TariffDetail;
        _buttonText = Adding ? "Add" : "Update";
    }

    private async Task OnValidTariffSubmit()
    {
        await OnSubmitCallback.InvokeAsync(_tariffDetail);
    }

}
