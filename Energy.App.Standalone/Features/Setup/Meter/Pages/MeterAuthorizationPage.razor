@page "/MeterAuthorization/{MeterTypeText}"

@inherits FluxorComponent
@inject IDispatcher Dispatcher

<ExtendedPageTitle>@MeterTypeText Authorization</ExtendedPageTitle>

<MudGrid Justify="Justify.Center">
    <MudItem xs="12">
        <MudPaper Elevation="2" Class="p-2 mt-2">
            <MudTooltip ShowOnHover="true" Text="Return to Setup">
                <MudLink Underline="Underline.None"
                         Href="@($"/Setup")">
                    <MudButton Class="m-1" Color="Color.Primary"
                               ButtonType="ButtonType.Button"
                               Variant="Variant.Filled"
                               Size="Size.Small"
                               StartIcon="@Icons.Material.Filled.ArrowBack">Back to Setup</MudButton>
                </MudLink>
            </MudTooltip>
            @if (ParametersSet)
            {
                <MeterAuthorizationFormComponent 
                    MeterType="MeterType" OnSuccessfulCallback="OnSuccessfulCallback" />
            }
        </MudPaper>
    </MudItem>

</MudGrid>

@code {

    [Parameter, EditorRequired]
    public string MeterTypeText { get; set; }

    private Task OnSuccessfulCallback(bool meterAuthSuccess)
    {
        return Task.CompletedTask;
    }


    MeterType MeterType;
    bool ParametersSet;
    protected override void OnParametersSet()
    {
        MeterType = MeterTypeText.eStringToEnum<MeterType>();
        ParametersSet = true;
    }

}