@inherits FluxorComponent
@inject IState<MeterSetupState> MeterSetupState
@inject IDispatcher Dispatcher


<MudPaper Class="p-3" Elevation="0">
    <MudText Typo="Typo.h5">Meter Setup</MudText>
</MudPaper>

<MudTable Items="@_meterStatusList.Values" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Type</MudTh>
        <MudTh>Add / Remove </MudTh>
        <MudTh>MPAN / MPRN</MudTh>
        <MudTh>Authorized</MudTh>
        <MudTh>Reload Data</MudTh>
        <MudTh>Current Tariff</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Type">@context.MeterType</MudTd>
        <MudTd DataLabel="Add / Remove">

            @if (context.Added)
            {
                <MudButton Color="Color.Error" ButtonType="ButtonType.Button" Variant="Variant.Outlined" Size="Size.Small" @onclick="@(async () => await RemoveMeterAsync(context.GlobalId, context.MeterType))">Remove</MudButton>
            }
            else
            {
                <MudTooltip Text="@(!HouseholdState.Value.Saved ? "Configure Household to add a Meter" : "Add a new Meter")">
                    <MudLink Disabled="@(!HouseholdState.Value.Saved)" Underline="Underline.None" Href="@(context.MeterType == MeterType.Electricity ? "/AddElectricityMeter" : "/AddGasMeter")">
                        <MudButton Disabled="@(!HouseholdState.Value.Saved)" Color="Color.Primary" ButtonType="ButtonType.Button" Variant="Variant.Filled" Size="Size.Small">Add</MudButton>
                    </MudLink>
                </MudTooltip>
            }
        </MudTd>
        <MudTd DataLabel="MPAN / MPRN">@context.Mpxn</MudTd>
        <MudTd DataLabel="Authorized">
            @if (context.Authorized)
            {
                <MudText Color="Color.Success">Authorized</MudText>
            }
            else
            {
            <MudTooltip ShowOnHover="true" Text="Authorize this meter with n3rgy">

                <MudLink Disabled="@(!context.Added)" Underline="Underline.None" Href="@($"/MeterAuthorization/{context.MeterType}")" >
                    <MudButton Color="Color.Default" Disabled="@(!context.Added)" ButtonType="ButtonType.Button" Variant="Variant.Filled" Size="Size.Small">Authorize</MudButton>
                </MudLink>
             </MudTooltip>
            }
        </MudTd>
        <MudTd DataLabel="Reload Data">
            @if (context.Authorized)
            {
                @if (!context.Loading)
                {
                    <MudButton Color="Color.Secondary" ButtonType="ButtonType.Button" Variant="Variant.Filled" Size="Size.Small" @onclick="@(async () => await ImportData(context.GlobalId))">Reload</MudButton>
                }
                else
                {
                    <MudProgressCircular Indeterminate="true"></MudProgressCircular>
                }
            }

        </MudTd>
        <MudTd DataLabel="Current Tariff">
            @if (context.Added)
            {
                @if (context.HasActiveTariff)
                {
                    <MudText Typo="Typo.body2">@context.TariffUnitRateText</MudText>
                    <MudText Typo="Typo.body2">@context.TariffStandingChargeText</MudText>
                }
                else
                {
                    <MudAlert Severity="Severity.Warning">No active tariff set</MudAlert>
                }
            }
        </MudTd>
        <MudTd DataLabel="Set Tariffs">
            @*<MudTooltip Text="Tooltip">*@
            <MudTooltip ShowOnHover="true" Text="@(context.Added ? "Set Tariffs for this Meter" : "Authorize this Meter to configure Tariffs")">
                <MudLink Disabled="@(!context.Added)" Underline="Underline.None"
                         Href="@($"/Tariffs/{context.MeterType}")">
                    <MudButton Color="Color.Primary"
                               Disabled="@(!context.Added)"
                               ButtonType="ButtonType.Button"
                               Variant="Variant.Filled"
                               Size="Size.Small"
                               StartIcon="@Icons.Material.Filled.CurrencyPound">Tariffs</MudButton>
                </MudLink>
            </MudTooltip>
        </MudTd>
    </RowTemplate>

</MudTable>

<MudMessageBox @ref="DeleteBox" Title="Warning" CancelText="Cancel">
    <MessageContent>
        This will remove the meter with all associated data,<br />
        including Energy Readings and Tariffs
        <br />
        <br />
        <strong>This cannot be undone</strong>
        <br />
        <br />

    </MessageContent>
    <YesButton>
        <MudButton Variant="Variant.Text" Class="ml-2" Color="Color.Error" Size="Size.Small">Delete</MudButton>
    </YesButton>
    <CancelButton>
        <MudButton Variant="Variant.Text" Color="Color.Default" Size="Size.Small">Cancel</MudButton>
    </CancelButton>
</MudMessageBox>





