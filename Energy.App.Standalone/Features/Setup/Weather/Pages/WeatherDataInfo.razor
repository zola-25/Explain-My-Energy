@inherits FluxorComponent
@inject IState<WeatherState> WeatherState
@inject IState<HouseholdState> HouseholdState
@inject IDispatcher Dispatcher

<div class="d-flex flex-wrap justify-space-between align-baseline">
    <MudPaper Class="d-flex ma-3 align-center" Elevation="0">
        <MudText Typo="Typo.h5" Class=" fw-bolder">Weather Data Status</MudText>
        <DocTooltipIcon DocSnippetHeader="Weather Data Status"
                        DocSnippetType="DocSnippetType.WeatherDataStatus" IconTitle="Help for Weather Data Status" />

    </MudPaper>

    <MudPaper Class="d-flex ma-3" Elevation="0">
        <MudLink Href="https://open-meteo.com/" Target="_blank">Weather data by Open-Meteo.com <i class="fa">&#xf08e;</i></MudLink>
    </MudPaper>

</div>
<MudTable Items="Enumerable.Range(0, 1)" T="int" Elevation="0">
    <HeaderContent>
        <MudTh Class="fw-bold">Historical Data</MudTh>
        <MudTh Class="fw-bold">Latest Reading</MudTh>
        <MudTh Class="fw-bold">Short-term Forecast Range</MudTh>
        <MudTh Class="fw-bold">Long-term Climate Forecast Range</MudTh>
        <MudTh Class="fw-bold">View Data</MudTh>

    </HeaderContent>
    <RowTemplate>
        @if (!HouseholdState.Value.Saved)
        {
            <MudTd colspan="5">
                <MudText Typo="Typo.body1" Align="Align.Center" Class="fw-bolder">
                    Complete Household setup to view your imported local Weather Data
                </MudText>
            </MudTd>
        }
        else if (WeatherState.Value.Loading)
        {
            <MudTd colspan="5">
                <MudText Typo="Typo.body1" Align="Align.Center" Class="fw-bolder">
                    Loading Weather Data...
                </MudText>
            </MudTd>
        }
        else if (WeatherState.Value.WeatherReadings.Any())
        {
            <MudTd DataLabel="Historical">From @WeatherState.Value.WeatherReadings.First().UtcTime.eToString("dnn MMM yyyy", true)</MudTd>
            <MudTd DataLabel="Latest">
                @{
                    var latestReading = WeatherState.Value.WeatherReadings.Where(c => c.IsRecentForecast).
                    OrderBy(c => c.UtcTime).
                    Last().
                    UtcTime;
                }

                @if (latestReading >= DateTime.UtcNow.Date.AddDays(-1))
                {
                    <MudTooltip Text="Up to date">
                        <div class="d-flex align-center">
                            @latestReading.eDateToDowShortMonthYY()
                            <MudIcon Icon="@Icons.Material.Filled.Check" Color="Color.Success"></MudIcon>
                        </div>
                    </MudTooltip>
                }
                else
                {
                    <MudTooltip Text="Missing Latest Weather Data">
                        <div class="d-flex align-center">
                            @latestReading.eDateToDowShortMonthYY()
                            <MudIcon Icon="@Icons.Material.Filled.AccessTime" Color="Color.Default"></MudIcon>
                        </div>
                    </MudTooltip>
                }
            </MudTd>
            <MudTd DataLabel="Short-term">
                @{
                    var forecastReadings = WeatherState.Value.WeatherReadings.Where(c => c.IsNearForecast).
                    OrderBy(c => c.UtcTime).
                    ToList();
                }
                @forecastReadings.First().UtcTime.eDateToDowShortMonthYY() - @forecastReadings.Last().UtcTime.eDateToDowShortMonthYY()
            </MudTd>
            <MudTd DataLabel="Long-term">
                @{
                    var climateReadings = WeatherState.Value.WeatherReadings.Where(c => c.IsClimateForecast).
                    OrderBy(c => c.UtcTime).
                    ToList();
                }
                @climateReadings.First().UtcTime.eToString("dnn MMM yy", true) - @climateReadings.Last().UtcTime.eToString("dnn MMM yy", true)

            </MudTd>
            <MudTd DataLabel="View Weather Data">
                <MudButton Href="/WeatherDataTable" Color="Color.Secondary" Variant="Variant.Filled">View Data</MudButton>
            </MudTd>
        }
    </RowTemplate>
</MudTable>


@code {


}