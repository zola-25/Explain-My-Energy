@* 
<div class="tooltip-button">
    <MudToggleIconButton  Toggled="_tooltipVisible" DisableRipple="true" Title="@IconTitle" ToggledIcon="@Icons.Material.Filled.Info" Color="@Color.Info" Icon="@Icons.Material.Outlined.Info">@IconTitle</MudToggleIconButton> 
    <MudIconButton OnClick="OnClick"  DisableRipple="true" Title="@IconTitle" Color="@Color.Info" Icon="@Icons.Material.Outlined.Info">@IconTitle</MudIconButton>

    <div class="tooltip-content @(_tooltipVisible ? "d-flex flex-column align-start" : "d-none")">
        <MudText  Typo="Typo.body2">@SnippetContent</MudText>
        <div class="d-flex">
        <MudLink  Typo="Typo.body2" Class="z-100 fw-bolder" Color="Color.Inherit" Href="@documentLink" Underline="Underline.Hover" Target="_blank">Open Documentation <i aria-hidden="true" class="fa">&#xf08e;</i></MudLink>
        </div>
    </div>
</div> *@

@code {
    // [Inject] DocsContent DocsContent { get; set; }

    // [Parameter, EditorRequired] public DocSnippet DocSnippet { get; set; }

    // [Parameter, EditorRequired] public string IconTitle { get; set; }


    // private void OnClick(MouseEventArgs mouseEventArgs) {

    //     _tooltipVisible = !_tooltipVisible;
    // }

    // private void IconOnFocus(FocusEventArgs focusEventArgs) {
    //     _tooltipVisible = true;
    // }

    // private void IconOnBlur(FocusEventArgs focusEventArgs) {
    //     _tooltipVisible = false;
    // }

    // RenderFragment SnippetContent;

    // bool _tooltipVisible = false;
    // bool _toggleIconToggled = false;

    // private void ToggleButtonChanged(bool isToggled)
    // {
    //     if (isToggled)
    //     {

    //         _tooltipVisible = true;
    //     }
    //     else
    //     {
    //         _tooltipVisible = false;
    //     }
    // }

    // private void VisibleChanged(bool isVisible)
    // {
    //     // if (isVisible)
    //     // {
    //     //     _tooltipVisible = true;
    //     //     _toggleIconToggled = true;
    //     //     // if(!_toggleIconToggled)
    //     //     // {
    //     //     //     _toggleIconToggled = true;
    //     //     // }
    //     // }
    //     // else
    //     // {
    //     //     _tooltipVisible = false;
    //     //     _toggleIconToggled = false;
    //     //     // if(_toggleIconToggled)
    //     //     // {
    //     //     //     _toggleIconToggled = false;
    //     //     // }
    //     // }


    // }

    // string documentLink;
    // protected override async Task OnParametersSetAsync()
    // {
    //     await base.OnParametersSetAsync();


    //     var (content, docPath) = await DocsContent.GetDocSnippet(DocSnippet);
    //     SnippetContent = builder =>
    //     {
    //         builder.AddMarkupContent(0, content);
    //     };
    //     documentLink = docPath;
    // }
}