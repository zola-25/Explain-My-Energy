@using Energy.App.Standalone.Features.Setup.TermsAndConditions
@using Energy.App.Standalone.Pages.HtmlContentFiles
@inherits FluxorComponent
@inject IDispatcher Dispatcher
<StepTemplate HeaderText="Welcome to Explain My Energy" CloseWizardCallback="OnExploreClick">
    <SetupStepPage>
        <WelcomeScreenContent>
        </WelcomeScreenContent>
    </SetupStepPage>
    <ActionButtons>
        
        <div class="d-flex justify-end px-4">

            <div
                class="mx-auto">
                <MudButton Size="Size.Medium"
                           Variant="Variant.Outlined"
                           Color="Color.Info"
                           OnClick="OnExploreClick">
                    <span><i aria-hidden="true" class="fa-regular fa-thumbs-up"></i> Okay! Let me explore</span>
                </MudButton>
                <MudButton
                    Size="Size.Medium"
                    Variant="Variant.Outlined"
                    Color="Color.Success"
                    OnClick="OnSetupWizardClick">
                    <span>Start Setup Wizard <i aria-hidden="true" class="fa-solid fa-wand-magic-sparkles"></i></span>
                </MudButton>
            </div>
            <MudButton Class="me-0" Color="Color.Default" OnClick="OnExploreClick">Exit</MudButton>
        </div>

    </ActionButtons>
</StepTemplate>
@code {


    [Parameter, EditorRequired] public EventCallback CloseWizardCallback { get; set; }

    [Parameter, EditorRequired] public EventCallback GoToNextStageCallback { get; set; }


    private async Task OnExploreClick()
    {
        Dispatcher.Dispatch(new HasSeenWelcomeScreenAction(true));
        await CloseWizardCallback.InvokeAsync();
    }

    private async Task OnSetupWizardClick()
    {
        Dispatcher.Dispatch(new HasSeenWelcomeScreenAction(true));
        await GoToNextStageCallback.InvokeAsync();
    }

}
